@using SpaceBattles.Core.Domain.Entities.Battle

@page "/Spaceship/{SpaceshipName}"

@inject GameState GameState

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper Class="pa-4 rounded-xl">
        <MudStack>
            <MudStack AlignItems="AlignItems.Stretch">
                <MudStack Row>
                    <MudText Typo="Typo.h5" Style="font-family:TitleFont">@_spaceship.Name</MudText>
                </MudStack>
                <MudDivider DividerType="DividerType.Middle"/>
                <MudStack Row>
                    <MudImage Style="@_style" Src="@_spaceship.ImagePath" Alt="a visual representation of this defense" Class="align-self-center rounded-lg" Width="256" Height="256"/>
                    @ParagraphDisplay(_spaceship.Description)
                </MudStack>
            </MudStack>
        </MudStack>
        
        <MudStack Row Spacing="0" Class="pt-2">
            @* <MudDivider DividerType="DividerType.Middle" Class="flex-grow-1 align-self-center"/> *@
            <MudText Typo="Typo.body1">Construction costs</MudText>
            <MudDivider DividerType="DividerType.Middle" Class="flex-grow-1 align-self-center"/>
        </MudStack>

        <TotalCostDisplay Planet="@GameState.CurrentPlanet" Upgrade="@_spaceship"/>

    </MudPaper>
</MudContainer>

@code {
    [Parameter]
    public required string SpaceshipName { get; set; }

    private Spaceship _spaceship;
    
    string _style = string.Empty;
    
    protected override void OnParametersSet()
    {
        _spaceship = Spaceship.Spaceships()
            .First(d => d.Name.Replace(" ", "-") == SpaceshipName);
        
        _style = GameState.CurrentPlanet.MeetsBuildingRequirements(_spaceship)
            ? string.Empty
            : "filter: grayscale(1)";
    }
    
    private static RenderFragment ParagraphDisplay(string text)
    {
        string[] paragraphs = text.Split(Environment.NewLine);

        return
            @<div  style="overflow-y: auto; max-height: 256px">
                @for(int i = 0; i < paragraphs.Length; i++)
                {
                    int localI = i;
                    <MudText Typo="Typo.body1" Style="@(localI == paragraphs.Length - 1 ? string.Empty : "margin-bottom: 0.5em")">@paragraphs[localI]</MudText>
                }
            </div>;
    }
}