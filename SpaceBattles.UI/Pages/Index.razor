@using SpaceBattles.Core.Domain.Models
@using SpaceBattles.UI.Layouts

@page "/"

@layout MainLayout

@inject NavigationManager NavigationManager
@inject GameState GameState
@inject SaveService SaveService
@inject HttpClient HttpClient
@inject IBrowserService BrowserService

<PageTitle>Welcome to SpaceBattles</PageTitle>

<div class=@(_showCreationScreen? "d-none" : string.Empty)>
    <MudStack AlignItems="AlignItems.Center">
        <MudImage Fluid Src="images/logo.avif" Alt="SpaceBattles logo" />
        
        <MudButton OnClick="@StartGame" Variant="Variant.Filled" Color="Color.Info" Size="Size.Large">
            <MudText Typo="Typo.h5" Style="font-family:TitleFont;">Play</MudText>
        </MudButton>
    </MudStack>
</div>

<div class=@(_showCreationScreen? string.Empty : "d-none")>
    <UniverseCreationWaiter @ref="@_universeCreationWaiter"/>
</div>

@code {
    private UniverseCreationWaiter? _universeCreationWaiter;

    private bool _showCreationScreen;

    protected override void OnAfterRender(bool firstRender)
    {
        const string key = "telemetry-ping";
        
        string? value = BrowserService.ReadLocalStorage(key);

        // Ping telemetry if first visit ever
        if (value is null)
        {
            _ = HttpClient.PostAsync("/api/telemetry", content:null);
            BrowserService.WriteToLocalStorage(key, DateTime.Now.ToLongDateString());
        }
        
        // Or ping if first visit today
        else
        {
            DateTime time = DateTime.Parse(value);

            if (time.Date != DateTime.Today)
            {
                _ = HttpClient.PostAsync("/api/telemetry", content:null);
                BrowserService.WriteToLocalStorage(key, DateTime.Now.ToLongDateString());
            }
        }
    }

    private async Task StartGame()
    {
        _showCreationScreen = true;
        string? saveData = SaveService.GetLoadData();

        if (saveData is not null)
        {
            SaveService.LoadFromStorage(saveData);
        }
        else
        {
            GameState.Initialize(new UniverseCreationModel());
        }

        await (_universeCreationWaiter?.ShowWaitingScreen(saveData is null) ?? Task.CompletedTask);

        NavigationManager.NavigateTo("/Overview");
    }
}