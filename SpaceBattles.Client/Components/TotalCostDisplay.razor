@using SpaceBattles.Core.Domain.Interfaces
@using SpaceBattles.Core.Domain.Entities.Universe
@using SpaceBattles.Core.Domain.ValueTypes

<MudStack Row Justify="Justify.SpaceAround">
    @foreach(ResourceCost requirement in Upgrade.Costs.Where(cost => cost.RequiredQuantity > 0))
    {
        <RessourceDisplay 
            Cost="requirement"
            CurrentQuantity = "Planet[requirement.Resource]"/>
    }
        <MudStack Row AlignItems="AlignItems.Center">
            <MudIcon Icon="@Icons.Material.Filled.AccessTime" />
            <MudText>@GetDurationText(Upgrade.Duration)</MudText>
        </MudStack>
</MudStack>

@code {
    [Parameter]
    public IRequirements Upgrade { get; init; } = default!;

    [Parameter]
    public Planet Planet { get; init; } = default!;
    
    private string GetDurationText(TimeSpan span)
    {
        if (span.TotalDays > 1)
        {
            int days = (int)span.TotalDays;
            return $"~ {days} day{(days >= 2 ? 's' : string.Empty)}";
        }
        if (span.TotalHours > 1)
        {
            int hours = (int)span.TotalHours;
            return $"~ {hours} hour{(hours >= 2 ? 's' : string.Empty)}";
        }
        if (span.TotalMinutes > 1)
        {
            int minutes = (int)span.TotalMinutes;
            return $"~ {minutes} minute{(minutes >= 2 ? 's' : string.Empty)}";
        }

        int seconds = (int)span.TotalSeconds;
        return $"{seconds} second{(seconds >= 2 ? 's' : string.Empty)}";
    }
}