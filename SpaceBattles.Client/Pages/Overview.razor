@page "/Overview"
@using SpaceBattles.Core.Domain.Entities.Universe
@using SpaceBattles.Core.Domain.Records
@implements IDisposable

<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="pa-4 rounded-xl align-self-center">
        <MudStack>
            <MudText Typo="Typo.h4" Class="align-self-center" Style="font-family:TitleFont;">@Planet.Name</MudText>
            <MudStack Row Justify="Justify.SpaceAround">
                <MudImage Src="@Planet.ImagePath" Alt="an image of your current planet" Width="200" Height="200" ObjectFit="ObjectFit.Contain"/>

                <MudDivider Vertical FlexItem/>

                <MudStack Justify="Justify.SpaceAround">
                    <MudText>Planet type : @Planet.PlanetType.ToString().Replace("_"," ")</MudText>
                    <MudText>Orbital period : @Planet.OrbitalPeriod days</MudText>
                    <MudText>Average surface temperature : @Planet.AverageSurfaceTemp C°</MudText>
                    <MudText>Gravity : @Planet.Gravity.ToString("0.##") G</MudText>
                </MudStack>
        </MudStack>

            <MudStack Row Spacing="0">
                <MudDivider DividerType="DividerType.Middle" Class="flex-grow-1 align-self-center"/>
                <MudText Typo="Typo.body1" Color="Color.Secondary" Style="font-family:TitleFont;">Resources</MudText>
                <MudDivider DividerType="DividerType.Middle" Class="flex-grow-1 align-self-center" />
            </MudStack>

            <MudStack Row Justify="Justify.SpaceAround">
                
                @foreach (var display in Resources.ResourcesDisplay())
                {
                    <MudStack>
                        <MudTooltip Text="@display.Name" Color="Color.Info">
                            <MudImage Src="@display.ImagePath" Width="128" Height="128"/>
                        </MudTooltip>
                        <MudText Class="align-self-center" Typo="Typo.body1">@Planet[@display.Resource].ToString("#,##0")</MudText>
                    </MudStack>
                }
            </MudStack>

            <MudStack Row Spacing="0">
                <MudDivider DividerType="DividerType.Middle" Class="flex-grow-1 align-self-center" />
                <MudText Typo="Typo.body1" Color="Color.Secondary" Style="font-family:TitleFont;">Production</MudText>
                <MudDivider DividerType="DividerType.Middle" Class="flex-grow-1 align-self-center" />
            </MudStack>
            
            <table>
                <tr>
                    <th>Resource</th>
                    <th>per minute</th>
                    <th>per hour</th>
                    <th>per day</th>
                </tr>
                
                @foreach (ResourceInfo display in Resources.ResourcesDisplay())
                {
                    <tr>
                        <td>@display.Name</td>
                        <td>@Planet.ResourceProduction(display.Resource).ToString("#,##0")</td>
                        <td>@((Planet.ResourceProduction(display.Resource) * 60).ToString("#,##0"))</td>
                        <td>@((Planet.ResourceProduction(display.Resource) * 60 * 24).ToString("#,##0"))</td>
                    </tr>
                }
            </table>
            
        </MudStack>

    </MudPaper>
</MudContainer>

@code {
    [Inject]
    private Planet Planet { get; init; } = default!;
    
    private readonly CancellationTokenSource _source = new();

    protected override void OnInitialized()
    {
        PeriodicTimer timer = new(TimeSpan.FromSeconds(1));
        _ = Task.Run(async () =>
        {
            while (await timer.WaitForNextTickAsync(_source.Token))
            {
                Planet.ResourcesUpdate(DateTime.Now);
                StateHasChanged();
            }
        });
    }

    public void Dispose()
    {
        _source.Cancel();
        _source.Dispose();
    }
}